<?php
/**
 * Created by PhpStorm.
 * User: lucius
 * Date: 21.12.15
 * Time: 14:53
 */

namespace Concrete\Package\BaclucExampleBasicTablePackage\Src; //TODO delete file or change namespace
use Concrete\Package\BasicTablePackage\Src\EntityGetterSetter;//TODO change use statements
use Concrete\Package\BasicTablePackage\Src\FieldTypes\DropdownLinkField;
use Concrete\Package\BasicTablePackage\Src\NewFieldTypes\DropdownLinkField as NewDropdownLinkField;
use Concrete\Package\BasicTablePackage\Src\NewFieldTypes\AbstractAssociationField;
use Concrete\Package\BasicTablePackage\Src\NewFieldTypes\DropdownField;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;
use Concrete\Package\BasicTablePackage\Src\FieldTypes\DateField;
use Concrete\Package\BasicTablePackage\Src\BaseEntity;

/*because of the hack with @DiscriminatorEntry Annotation, all Doctrine Annotations need to be
properly imported*/
use Doctrine\ORM\Mapping\Entity;
use Doctrine\ORM\Mapping\InheritanceType;
use Doctrine\ORM\Mapping\DiscriminatorColumn;
use Concrete\Package\BasicTablePackage\Src\DiscriminatorEntry\DiscriminatorEntry;
use Doctrine\ORM\Mapping\Table;


/**
 * Class Phone
 * package Concrete\Package\BaclucPersonPackage\Src
 * @Entity
 * @InheritanceType("JOINED")
 * @DiscriminatorColumn(name="discr", type="string")
 * @DiscriminatorEntry( value = "Concrete\Package\BaclucPersonPackage\Src\Phone" ) //TODO change discriminatorentry
 * @Table(name="bacluc_example_phone")//TODO change table name
 */
class Phone extends BaseEntity //TODO change class name
{
    use EntityGetterSetter;//dontchange
    //dontchange
    public static $staticEntityfilterfunction; //that you have a filter that is only for this entity
    /**
     * @var int
     * @Id @Column(type="integer")
     * @GEneratedValue(strategy="AUTO")
     */
    protected $id;


    /**
     * @Column(type="string")
     */
    protected $number;

    /**
     * @var Example
     * @ManyToOne(targetEntity="Concrete\Package\BaclucExampleBasicTablePackage\Src\Example", inversedBy="Phones")
     */
    protected $ManyToOne;





    public function __construct(){
        parent::__construct();


    }

    public function setDefaultFieldTypes()
    {
        parent::setDefaultFieldTypes(); // TODO: Change the autogenerated stub

//        $oldFieldType =$this->fieldTypes['ManyToOne'];
//        $newFieldType = new NewDropdownLinkField($oldFieldType->getSQLFieldName(), $oldFieldType->getLabel(), $oldFieldType->getPostName());
//        DropdownLinkField::copyLinkInfo($oldFieldType,$newFieldType);
//
//        $this->fieldTypes['ManyToOne'] = $newFieldType;
    }


    public static function getDefaultGetDisplayStringFunction(){
        $function = function(Phone $item){ //TODO change displayStringFunction that it returns a unique string of enttity

            $returnString ="";
            if(strlen($item->id)>0){
                $returnString.=$item->id." ";
            }
            if(strlen($item->number)>0){
                $returnString.=$item->number." ";
            }

            return $returnString;
        };
        return $function;
    }




}