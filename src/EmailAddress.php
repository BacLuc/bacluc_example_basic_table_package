<?php
/**
 * Created by PhpStorm.
 * User: lucius
 * Date: 21.12.15
 * Time: 14:53
 */

namespace Concrete\Package\BaclucExampleBasicTablePackage\Src;

use Concrete\Package\BaclucExampleBasicTablePackage\Src\EntityViews\EmailAddressFormView;
use Concrete\Package\BasicTablePackage\Src\DiscriminatorEntry\DiscriminatorEntry;
use Concrete\Package\BasicTablePackage\Src\EntityGetterSetter;
use Concrete\Package\BasicTablePackage\Src\FieldTypes\EmailField;
use Doctrine\ORM\Mapping\Entity;
use Doctrine\ORM\Mapping\Table;

/*because of the hack with @DiscriminatorEntry Annotation, all Doctrine Annotations need to be
properly imported*/


/**
 * Class EmailAddress
 * package Concrete\Package\BaclucPersonPackage\Src
 * @Entity
 * @Table(name="bacluc_example_email_address")
 * @DiscriminatorEntry( value = "Concrete\Package\BaclucExampleBasicTablePackage\Src\EmailAddress" )//TODO change discriminator value
 * note that because it is a child class, you dont need discriminatorcolumn
 */
class EmailAddress extends Address
{
    use EntityGetterSetter;
    //dontchange
    public static $staticEntityfilterfunction; //that you have a filter that is only for this entity
    /**
     * @var int
     * @Id @Column(type="integer")
     * @GEneratedValue(strategy="AUTO")
     */
    protected $id;


    /**
     * @var string
     * @Column(type="string")
     */
    protected $email;


    public function __construct ()
    {
        parent::__construct();


    }

    public static function getDefaultGetDisplayStringFunction ()
    {
        $function = function (EmailAddress $item) { //TODO change this function

            $returnString = "";
            if (strlen($item->email != null)) {
                $returnString .= $item->email;
            }
            return $returnString;
        };
        return $function;
    }

    public function setDefaultFormViews ()
    {
        $this->defaultFormView =
            new EmailAddressFormView($this);//TODO if you have a special form view for this entity, put it here
    }

    public function setDefaultFieldTypes ()
    {
        parent::setDefaultFieldTypes(); // TODO: Change the autogenerated stub
        $this->fieldTypes['email'] = new EmailField('email', 'Email Address',
                                                    'postemail');//TODO change not automatically detected fieldtypes to the right fieldtype

    }


}